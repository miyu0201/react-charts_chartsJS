[{"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\index.js":"1","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\App.js":"2","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\reportWebVitals.js":"3","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\BarChart.js":"4","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\LineChart.js":"5","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\PieChart.js":"6","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\RadarChart.js":"7","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\index.js":"8","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\App.js":"9","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\reportWebVitals.js":"10","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\RadarChart.js":"11","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\LineChart.js":"12","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\PieChart.js":"13","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\BarChart.js":"14"},{"size":500,"mtime":1671197777572,"results":"15","hashOfConfig":"16"},{"size":5183,"mtime":1671220223992,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1671197777619,"results":"18","hashOfConfig":"16"},{"size":2141,"mtime":1671307561205,"results":"19","hashOfConfig":"16"},{"size":1852,"mtime":1671308341894,"results":"20","hashOfConfig":"16"},{"size":1940,"mtime":1671220326530,"results":"21","hashOfConfig":"16"},{"size":1160,"mtime":1671208843546,"results":"22","hashOfConfig":"16"},{"size":500,"mtime":1671197777572,"results":"23","hashOfConfig":"24"},{"size":5183,"mtime":1671220223992,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1671197777619,"results":"26","hashOfConfig":"24"},{"size":1160,"mtime":1671208843546,"results":"27","hashOfConfig":"24"},{"size":1852,"mtime":1671308341894,"results":"28","hashOfConfig":"24"},{"size":1940,"mtime":1671220326530,"results":"29","hashOfConfig":"24"},{"size":1928,"mtime":1671561891218,"results":"30","hashOfConfig":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"36k3bg",{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16o0i2e",{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\index.js",[],["63","64"],"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\App.js",["65","66","67"],"\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.png\";\nimport {AiOutlineMenu} from 'react-icons/ai';\nimport {AiOutlineUser} from 'react-icons/ai';\n\nimport {AiOutlineSetting} from 'react-icons/ai';\nimport LineChart from \"./LineChart\";\nimport RadarChart from \"./RadarChart\";\nimport PieChart from \"./PieChart\";\nimport BarChart from \"./BarChart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card,Container, Button,Row,Col,Nav, Navbar, Offcanvas, NavDropdown, Form,Breadcrumb} from \"react-bootstrap\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return ( \n    <>\n    \n\n    <Navbar bg=\"light\" variant=\"light\">\n    <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src={logo}\n              width=\"80\"\n              height=\"50\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n           \n          </Navbar.Brand>\n\n          <Button className=\"me-auto\" variant=\"light\" onClick={handleShow}>\n        <AiOutlineMenu  size={25} />\n      </Button>\n      <AiOutlineUser size={30} style={{marginRight:\"15px\"}}/>\n      <AiOutlineSetting size={30}/>\n      \n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title></Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n        <Nav className=\"me-auto\">\n            <Nav.Link href=\"#home\">DashBoard</Nav.Link>\n            <Nav.Link href=\"#features\">Analysis</Nav.Link>\n            <Nav.Link href=\"#features\">Statistics</Nav.Link>\n            <Nav.Link href=\"#pricing\">Components</Nav.Link>\n            <NavDropdown\n              id=\"nav-dropdown\"\n              title=\"Charts\"\n              menuVariant=\"dark\"\n            >\n              <NavDropdown.Item href=\"#action/3.1\">Total User</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Total Order\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Total Sales</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.4\">\n                Total Marketing\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n              Analytics\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown\n              id=\"nav-dropdown\"\n              title=\"Profile\"\n              menuVariant=\"dark\"\n            >\n              <NavDropdown.Item href=\"#action/3.1\">User Profile</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Account Profile\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">User List</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                User Card\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Offcanvas.Body>\n      </Offcanvas>\n        \n        </Container>\n  </Navbar>\n\n<Container className=\"mt-5 mb-5\" >\n\n<Breadcrumb className=\"mt-2\" >\n      <Breadcrumb.Item href=\"\" >\n      <a href='#' style={{color:\"grey\"}}>Home</a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item href=\"\" >\n      <a href='#' style={{color:\"grey\"}}>Charts</a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item active>Analytics</Breadcrumb.Item>\n    </Breadcrumb>\n\n<Row className=\"mt-5\">\n  <h2  style={{ marginBottom:\"40px\" }}>Analytics</h2>\n        <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Annual Sales</Card.Title>\n       <BarChart />\n       <Card.Text className=\"mt-3\">\n         Some quick summary of annual sales for year 2022 - department A and Department B\n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n        \n   <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Yearly Budget</Card.Title>\n       <LineChart/>\n       <Card.Text className=\"mt-3\">\n       Track expenses to manage your event budget online for free. \n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n   </Row>\n\n   <Row className=\"mt-5\" >\n        <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Global Market Share</Card.Title>\n      <PieChart/>\n       <Card.Text>\n       A company's market share is its sales measured as a percentage of an industry's total revenues. \n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n        \n   <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Annual Growth Rate</Card.Title>\n       <RadarChart />\n       <Card.Text>\n       The compound annual growth rate (CAGR) measures an investment's annual growth rate over a period of time.\n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n   </Row>\n        </Container>\n        </>\n\n  ) ;\n}\n\nexport default App;\n","C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\reportWebVitals.js",[],"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\BarChart.js",["68","69"],"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\LineChart.js",["70","71","72","73"],"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\PieChart.js",[],"C:\\Users\\yming\\Downloads\\react-chartjs-2-master\\react-chartjs-2-master\\src\\RadarChart.js",[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\index.js",[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\App.js",["74","75","76"],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\reportWebVitals.js",[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\RadarChart.js",[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\LineChart.js",["77","78","79","80"],"import React, { useMemo,useState,useEffect } from \"react\";\n\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst supply = [2326,3435, 1245, 1452, 5643, 3274, 5346, 1224, 2245,4232,3221,553];\nconst electricity = [1623,2115, 2213, 2325, 4223,2154, 6249, 7324, 6125,4524,2221,3211];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  responsive: true,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Regional Budget 2022'\n    }\n  },\n};\n\nexport default function LineChart() {\n\n  const [dataA,setDataA]= useState([])\n  const [dataB,setDataB]= useState([])\n\nReact.useEffect(() => {\n  async function getData() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\")\n      const rawdata = await res.json()\n      setDataA(rawdata.data.memes.map((item)=> item.width))\n      setDataB(rawdata.data.memes.map((item)=> item.height))\n      console.log(rawdata)\n  }\n  getData()\n  \n}, [])\n\n  const data = {\n    \n      datasets: [\n        {\n          label: \"Supply\",\n          data: dataA,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(70, 152, 132,0.8)\",\n        },\n\n        {\n          label: \"Eleciricity\",\n          data: dataB,\n          \n          borderColor:\"rgb(755, 152, 152)\",\n          backgroundColor:\"rgba(745, 142, 132, 0.8)\",\n          \n        },\n      ],\n      labels,\n    };\n\n  return <Line data={data} options={options} />;\n}\n","C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\PieChart.js",[],"C:\\E\\Study\\Code\\react and restful API . hook tutorial\\react-chartjs\\react-chartjs\\src\\BarChart.js",["81","82"],"import React, { useMemo, useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n\n\n//const departmentA = [226,345, 125, 142, 543, 324, 546, 124, 245,432,321,553];\n//const departmentB = [163,115, 213, 325, 423,154, 649, 734, 615,454,221,311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  animations: false,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Regional Sales 2022'\n    }\n  },\n \n};\n\nexport default function BarChart() {\n\n  const [dataA,setDataA]= useState([])\n  const [dataB,setDataB]= useState([])\n\nReact.useEffect(() => {\n  async function getData() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\")\n      const rawdata = await res.json()\n      setDataA(rawdata.data.memes.map((item)=> item.width))\n      setDataB(rawdata.data.memes.map((item)=> item.height))\n      console.log(rawdata)\n  }\n  getData()\n  \n}, [])\n\n\n  const ChartData = {\n   \n      datasets: [\n        {\n          label: \"Department B\",\n          tension: 0.3,\n          data: dataA,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n        },\n        {\n          label: \"Department A \",\n          tension: 0.3,\n          data:dataB,\n          borderColor: \"rgb(175, 152, 192)\",\n          backgroundColor: \"rgba(725, 132, 192, 0.5)\",\n        },\n      ],\n      labels,\n    };\n\n  return (\n    <div className=\"App\">\n   \n      <Bar data={ChartData} options={options} />\n    </div>\n  );\n}\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":14,"column":78,"nodeType":"89","messageId":"90","endLine":14,"endColumn":82},{"ruleId":"91","severity":1,"message":"92","line":98,"column":7,"nodeType":"93","endLine":98,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":101,"column":7,"nodeType":"93","endLine":101,"endColumn":42},{"ruleId":"87","severity":1,"message":"94","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"95","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},{"ruleId":"87","severity":1,"message":"94","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"95","line":1,"column":34,"nodeType":"89","messageId":"90","endLine":1,"endColumn":43},{"ruleId":"87","severity":1,"message":"96","line":30,"column":7,"nodeType":"89","messageId":"90","endLine":30,"endColumn":13},{"ruleId":"87","severity":1,"message":"97","line":31,"column":7,"nodeType":"89","messageId":"90","endLine":31,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":14,"column":78,"nodeType":"89","messageId":"90","endLine":14,"endColumn":82},{"ruleId":"91","severity":1,"message":"92","line":98,"column":7,"nodeType":"93","endLine":98,"endColumn":42},{"ruleId":"91","severity":1,"message":"92","line":101,"column":7,"nodeType":"93","endLine":101,"endColumn":42},{"ruleId":"87","severity":1,"message":"94","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"95","line":1,"column":34,"nodeType":"89","messageId":"90","endLine":1,"endColumn":43},{"ruleId":"87","severity":1,"message":"96","line":30,"column":7,"nodeType":"89","messageId":"90","endLine":30,"endColumn":13},{"ruleId":"87","severity":1,"message":"97","line":31,"column":7,"nodeType":"89","messageId":"90","endLine":31,"endColumn":18},{"ruleId":"87","severity":1,"message":"94","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":24},{"ruleId":"87","severity":1,"message":"95","line":1,"column":26,"nodeType":"89","messageId":"90","endLine":1,"endColumn":35},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useMemo' is defined but never used.","'useEffect' is defined but never used.","'supply' is assigned a value but never used.","'electricity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
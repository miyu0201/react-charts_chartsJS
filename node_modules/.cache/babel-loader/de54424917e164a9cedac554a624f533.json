{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yming\\\\Downloads\\\\react-chartjs-2-master\\\\react-chartjs-2-master\\\\src\\\\BarChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useEffect, useState } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\nimport { Bar } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, BarElement, Title, Tooltip, Legend, Filler);\nconst departmentA = [226, 345, 125, 142, 543, 324, 546, 124, 245, 432, 321, 553];\nconst departmentB = [163, 115, 213, 325, 423, 154, 649, 734, 615, 454, 221, 311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst options = {\n  fill: true,\n  animations: false,\n  scales: {\n    y: {\n      min: 0\n    }\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      display: true\n    },\n    title: {\n      display: true,\n      text: 'Regional Sales 2022'\n    }\n  }\n};\nexport default function BarChart() {\n  _s();\n\n  const [a, setA] = useState([]);\n  const [b, setB] = useState([]);\n  React.useEffect(() => {\n    fetch(\"https://api.imgflip.com/get_memes\").then(res => res.json()).then(data => setA(data.data.memes.width));\n    console.log(a);\n  }, []);\n  /*\n  React.useEffect(async () => {\n    const res = await fetch(\"https://api.imgflip.com/get_memes\")\n    const data = await res.json()\n    setA(data.data.memes)\n    setB(data.data.memes.height)\n    console.log(a)\n  }, [])*/\n\n  const data = useMemo(function () {\n    return {\n      datasets: [{\n        label: \"Department B\",\n        tension: 0.3,\n        data: a,\n        borderColor: \"rgb(75, 192, 192)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.5)\"\n      }, {\n        label: \"Department A \",\n        tension: 0.3,\n        data: b,\n        borderColor: \"rgb(175, 152, 192)\",\n        backgroundColor: \"rgba(725, 132, 192, 0.5)\"\n      }],\n      labels\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BarChart, \"pnuxG8HTOd9CZ1cnT/TbnKdI8xI=\");\n\n_c = BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/yming/Downloads/react-chartjs-2-master/react-chartjs-2-master/src/BarChart.js"],"names":["React","useMemo","useEffect","useState","Chart","ChartJS","CategoryScale","LinearScale","PointElement","BarElement","Title","Tooltip","Legend","Filler","Bar","register","departmentA","departmentB","labels","options","fill","animations","scales","y","min","responsive","plugins","legend","display","title","text","BarChart","a","setA","b","setB","fetch","then","res","json","data","memes","width","console","log","datasets","label","tension","borderColor","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useMemo, useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n\n\nconst departmentA = [226,345, 125, 142, 543, 324, 546, 124, 245,432,321,553];\nconst departmentB = [163,115, 213, 325, 423,154, 649, 734, 615,454,221,311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  animations: false,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Regional Sales 2022'\n    }\n  },\n \n};\n\nexport default function BarChart() {\n\n  const [a,setA]= useState([])\nconst [b,setB]= useState([])\n\nReact.useEffect(() => {\n  fetch(\"https://api.imgflip.com/get_memes\")\n      .then(res => res.json())\n      .then(data => setA(data.data.memes.width))\n      console.log(a)\n}, [])\n/*\nReact.useEffect(async () => {\n  const res = await fetch(\"https://api.imgflip.com/get_memes\")\n  const data = await res.json()\n  setA(data.data.memes)\n  setB(data.data.memes.height)\n  console.log(a)\n}, [])*/\n\n\n\n  const data = useMemo(function () {\n    return {\n      datasets: [\n        {\n          label: \"Department B\",\n          tension: 0.3,\n          data: a,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n        },\n        {\n          label: \"Department A \",\n          tension: 0.3,\n          data:b,\n          borderColor: \"rgb(175, 152, 192)\",\n          backgroundColor: \"rgba(725, 132, 192, 0.5)\",\n        },\n      ],\n      labels,\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n    \n      <Bar data={data} options={options} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}
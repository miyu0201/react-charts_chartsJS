{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yming\\\\Downloads\\\\react-chartjs-2-master\\\\react-chartjs-2-master\\\\src\\\\SegmentChart.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo } from \"react\";\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler } from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend, Filler);\nconst supply = [226, 345, 125, 142, 543, 324, 546, 124, 245, 432, 321, 553];\nconst electricity = [163, 115, 213, 325, 423, 154, 649, 734, 615, 454, 221, 311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nconst options = {\n  fill: true,\n  responsive: true,\n  scales: {\n    y: {\n      min: 0\n    }\n  },\n  plugins: {\n    legend: {\n      display: true\n    }\n  }\n};\nexport default function LineChart() {\n  _s();\n\n  const data = useMemo(function () {\n    return {\n      datasets: [{\n        label: \"Supply\",\n        data: supply,\n        tension: 0.3,\n        borderColor: \"rgb(75, 192, 192)\",\n        pointRadius: 6,\n        pointBackgroundColor: \"rgb(75, 192, 192)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.3)\",\n        segment: {\n          borderColor: function (context) {\n            if (context.type === \"segment\") {\n              return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n            }\n          },\n          backgroundColor: function (context) {\n            if (context.type === \"segment\") {\n              return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n            }\n          }\n        }\n      }, {\n        label: \"Eleciricity\",\n        data: electricity,\n        tension: 0.3,\n        borderColor: \"rgb(75, 192, 192)\",\n        pointRadius: 6,\n        pointBackgroundColor: \"rgb(755, 152, 152)\",\n        backgroundColor: \"rgba(745, 142, 132, 0.6)\",\n        segment: {\n          borderColor: function (context) {\n            if (context.type === \"segment\") {\n              return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n            }\n          },\n          backgroundColor: function (context) {\n            if (context.type === \"segment\") {\n              return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n            }\n          }\n        }\n      }],\n      labels\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Line, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LineChart, \"jwuu1hJIzb+z9O8CErpZ1XdXNoc=\");\n\n_c = LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["C:/Users/yming/Downloads/react-chartjs-2-master/react-chartjs-2-master/src/SegmentChart.js"],"names":["useMemo","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","Line","register","supply","electricity","labels","options","fill","responsive","scales","y","min","plugins","legend","display","LineChart","data","datasets","label","tension","borderColor","pointRadius","pointBackgroundColor","backgroundColor","segment","context","type","p1DataIndex"],"mappings":"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","sourcesContent":["import { useMemo } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst supply = [226,345, 125, 142, 543, 324, 546, 124, 245,432,321,553];\nconst electricity = [163,115, 213, 325, 423,154, 649, 734, 615,454,221,311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  responsive: true,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  plugins: {\n    legend: {\n      display: true,\n    },\n  },\n};\n\nexport default function LineChart() {\n  const data = useMemo(function () {\n    return {\n      datasets: [\n        {\n          label: \"Supply\",\n          data: supply,\n          tension: 0.3,\n          borderColor: \"rgb(75, 192, 192)\",\n          pointRadius: 6,\n          pointBackgroundColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.3)\",\n          segment: {\n            borderColor: function (context) {\n              if (context.type === \"segment\") {\n                return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n              }\n            },\n            backgroundColor: function (context) {\n              if (context.type === \"segment\") {\n                return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n              }\n            },\n          },\n        },\n\n        {\n          label: \"Eleciricity\",\n          data: electricity,\n          tension: 0.3,\n          borderColor: \"rgb(75, 192, 192)\",\n          pointRadius: 6,\n          pointBackgroundColor: \"rgb(755, 152, 152)\",\n          backgroundColor: \"rgba(745, 142, 132, 0.6)\",\n          segment: {\n            borderColor: function (context) {\n              if (context.type === \"segment\") {\n                return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n              }\n            },\n            backgroundColor: function (context) {\n              if (context.type === \"segment\") {\n                return context.p1DataIndex % 2 === 0 ? \"red\" : \"green\";\n              }\n            },\n          },\n        },\n      ],\n      labels,\n    };\n  }, []);\n\n  return <Line data={data} options={options} />;\n}\n"]},"metadata":{},"sourceType":"module"}
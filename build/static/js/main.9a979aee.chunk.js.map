{"version":3,"sources":["logo.png","LineChart.js","RadarChart.js","PieChart.js","BarChart.js","App.js","reportWebVitals.js","index.js"],"names":["ChartJS","register","ArcElement","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Filler","labels","options","fill","responsive","scales","y","min","plugins","legend","display","title","text","LineChart","useState","dataA","setDataA","dataB","setDataB","React","useEffect","a","fetch","res","json","rawdata","data","memes","map","item","width","height","console","log","getData","datasets","label","borderColor","backgroundColor","RadialLinearScale","growth","RadarChart","useMemo","supply","PieChart","BarElement","animations","BarChart","ChartData","tension","className","App","show","setShow","Navbar","bg","variant","Container","Brand","href","alt","src","logo","Button","onClick","size","style","marginRight","Offcanvas","onHide","Header","closeButton","Body","Nav","Link","NavDropdown","id","menuVariant","Item","Divider","Breadcrumb","color","active","Row","marginBottom","Col","Card","Text","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a979aee.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.64bac458.png\";","import React, { useMemo,useState,useEffect } from \"react\";\n\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement,\n} from \"chart.js\";\nimport { Line } from \"react-chartjs-2\";\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst supply = [2326,3435, 1245, 1452, 5643, 3274, 5346, 1224, 2245,4232,3221,553];\nconst electricity = [1623,2115, 2213, 2325, 4223,2154, 6249, 7324, 6125,4524,2221,3211];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  responsive: true,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Regional Budget 2022'\n    }\n  },\n};\n\nexport default function LineChart() {\n\n  const [dataA,setDataA]= useState([])\n  const [dataB,setDataB]= useState([])\n\nReact.useEffect(() => {\n  async function getData() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\")\n      const rawdata = await res.json()\n      setDataA(rawdata.data.memes.map((item)=> item.width))\n      setDataB(rawdata.data.memes.map((item)=> item.height))\n      console.log(rawdata)\n  }\n  getData()\n  \n}, [])\n\n  const data = {\n    \n      datasets: [\n        {\n          label: \"Supply\",\n          data: dataA,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(70, 152, 132,0.8)\",\n        },\n\n        {\n          label: \"Eleciricity\",\n          data: dataB,\n          \n          borderColor:\"rgb(755, 152, 152)\",\n          backgroundColor:\"rgba(745, 142, 132, 0.8)\",\n          \n        },\n      ],\n      labels,\n    };\n\n  return <Line data={data} options={options} />;\n}\n","import { useMemo } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement,\n  RadialLinearScale,\n} from \"chart.js\";\nimport { Radar} from \"react-chartjs-2\";\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  RadialLinearScale,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst growth = [236,345, 245, 252, 563, 274, 346, 424, 245,422,221,353];\n\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  responsive: true,\n  \n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Annual Growth 2022'\n    }\n  },\n};\n\nexport default function RadarChart() {\n  const data = useMemo(function () {\n    return {\n      datasets: [\n        {\n          label: \"Supply\",\n          data: growth,\n          borderColor: \"rgb(244, 178, 97)\",\n          backgroundColor: \"rgba(244, 178, 97,0.8)\",\n        },\n\n       \n      ],\n      labels,\n    };\n  }, []);\n\n  return <Radar data={data} options={options} />;\n}\n","\nimport { useMemo } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n  ArcElement,\n} from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(\n  ArcElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\nconst supply = [2326,3435, 1245, 1452];\n\nconst labels = [\"European\", \"America\", \"Asian\",\"Australia\", ];\n\nconst options = {\n  fill: true,\n  responsive: true,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Global Market Share 2022'\n    },\n    \n  },\n};\n\nexport default function PieChart() {\n  const data = useMemo(function () {\n    return {\n      datasets: [\n        {\n          label: \"Supply\",\n          data: supply,\n          borderColor: \"white\",\n          backgroundColor: [\"#C78283\", \"#F3D9DC\", \"#D7BEA8\", \"#744253\"],\n        },\n\n   \n      ],\n      labels,\n    };\n  }, []);\n\n  return <Pie data={data} options={options} />;\n}\n\n/*\nconst PieChart = () => {\n  const pieChartData = {\n    labels: [\"European\", \"America\", \"Asian\",\"Australia\", ],\n    datasets: [{\n        data: [8137119, 9431691, 10266674,6662881],\n        label: \"Infected People\",\n        backgroundColor: [\"#C78283\", \"#F3D9DC\", \"#D7BEA8\", \"#744253\"],\n        hoverBackgroundColor: [\"#175000\", \"#003350\", \"#993d00\"]\n    }]\n  };\n  const pieChart = (\n    <Pie\n      type=\"pie\"\n      width={130}\n      height={50}\n      options={{\n        title: {\n          display: true,\n          text: \"COVID-19 Cases of Last 3 Months\",\n          fontSize: 15\n        },\n        plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Global Market Share'\n    },\n    \n  },\n      }}\n      data={pieChartData}\n    />\n  );\n  return pieChart;\n};\nexport default PieChart;*/","import React, { useMemo, useEffect, useState } from \"react\";\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler,\n} from \"chart.js\";\n\nimport { Bar } from \"react-chartjs-2\";\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n  Filler\n);\n\n\n\n//const departmentA = [226,345, 125, 142, 543, 324, 546, 124, 245,432,321,553];\n//const departmentB = [163,115, 213, 325, 423,154, 649, 734, 615,454,221,311];\nconst labels = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n\nconst options = {\n  fill: true,\n  animations: false,\n  scales: {\n    y: {\n      min: 0,\n    },\n  },\n  responsive: true,\n  plugins: {\n    legend: {\n      display: true,\n    },\n    title: {\n      display: true,\n      text: 'Regional Sales 2022'\n    }\n  },\n \n};\n\nexport default function BarChart() {\n\n  const [dataA,setDataA]= useState([])\n  const [dataB,setDataB]= useState([])\n\nReact.useEffect(() => {\n  async function getData() {\n      const res = await fetch(\"https://api.imgflip.com/get_memes\")\n      const rawdata = await res.json()\n      setDataA(rawdata.data.memes.map((item)=> item.width))\n      setDataB(rawdata.data.memes.map((item)=> item.height))\n      console.log(rawdata)\n  }\n  getData()\n  \n}, [])\n\n\n  const ChartData = {\n   \n      datasets: [\n        {\n          label: \"Department B\",\n          tension: 0.3,\n          data: dataA,\n          borderColor: \"rgb(75, 192, 192)\",\n          backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n        },\n        {\n          label: \"Department A \",\n          tension: 0.3,\n          data:dataB,\n          borderColor: \"rgb(175, 152, 192)\",\n          backgroundColor: \"rgba(725, 132, 192, 0.5)\",\n        },\n      ],\n      labels,\n    };\n\n  return (\n    <div className=\"App\">\n   \n      <Bar data={ChartData} options={options} />\n    </div>\n  );\n}\n","\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport logo from \"./logo.png\";\nimport {AiOutlineMenu} from 'react-icons/ai';\nimport {AiOutlineUser} from 'react-icons/ai';\n\nimport {AiOutlineSetting} from 'react-icons/ai';\nimport LineChart from \"./LineChart\";\nimport RadarChart from \"./RadarChart\";\nimport PieChart from \"./PieChart\";\nimport BarChart from \"./BarChart\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card,Container, Button,Row,Col,Nav, Navbar, Offcanvas, NavDropdown, Form,Breadcrumb} from \"react-bootstrap\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return ( \n    <>\n    \n\n    <Navbar bg=\"light\" variant=\"light\">\n    <Container>\n          <Navbar.Brand href=\"#home\">\n            <img\n              alt=\"\"\n              src={logo}\n              width=\"80\"\n              height=\"50\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n           \n          </Navbar.Brand>\n\n          <Button className=\"me-auto\" variant=\"light\" onClick={handleShow}>\n        <AiOutlineMenu  size={25} />\n      </Button>\n      <AiOutlineUser size={30} style={{marginRight:\"15px\"}}/>\n      <AiOutlineSetting size={30}/>\n      \n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title></Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n        <Nav className=\"me-auto\">\n            <Nav.Link href=\"#home\">DashBoard</Nav.Link>\n            <Nav.Link href=\"#features\">Analysis</Nav.Link>\n            <Nav.Link href=\"#features\">Statistics</Nav.Link>\n            <Nav.Link href=\"#pricing\">Components</Nav.Link>\n            <NavDropdown\n              id=\"nav-dropdown\"\n              title=\"Charts\"\n              menuVariant=\"dark\"\n            >\n              <NavDropdown.Item href=\"#action/3.1\">Total User</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Total Order\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Total Sales</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.4\">\n                Total Marketing\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n              Analytics\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown\n              id=\"nav-dropdown\"\n              title=\"Profile\"\n              menuVariant=\"dark\"\n            >\n              <NavDropdown.Item href=\"#action/3.1\">User Profile</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Account Profile\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">User List</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                User Card\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Offcanvas.Body>\n      </Offcanvas>\n        \n        </Container>\n  </Navbar>\n\n<Container className=\"mt-5 mb-5\" >\n\n<Breadcrumb className=\"mt-2\" >\n      <Breadcrumb.Item href=\"\" >\n      <a href='#' style={{color:\"grey\"}}>Home</a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item href=\"\" >\n      <a href='#' style={{color:\"grey\"}}>Charts</a>\n      </Breadcrumb.Item>\n      <Breadcrumb.Item active>Analytics</Breadcrumb.Item>\n    </Breadcrumb>\n\n<Row className=\"mt-5\">\n  <h2  style={{ marginBottom:\"40px\" }}>Analytics</h2>\n        <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Annual Sales</Card.Title>\n       <BarChart />\n       <Card.Text className=\"mt-3\">\n         Some quick summary of annual sales for year 2022 - department A and Department B\n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n        \n   <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Yearly Budget</Card.Title>\n       <LineChart/>\n       <Card.Text className=\"mt-3\">\n       Track expenses to manage your event budget online for free. \n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n   </Row>\n\n   <Row className=\"mt-5\" >\n        <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Global Market Share</Card.Title>\n      <PieChart/>\n       <Card.Text>\n       A company's market share is its sales measured as a percentage of an industry's total revenues. \n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n        \n   <Col><Card style={{ width: '100%' }}> \n     \n     <Card.Body>\n       <Card.Title>Annual Growth Rate</Card.Title>\n       <RadarChart />\n       <Card.Text>\n       The compound annual growth rate (CAGR) measures an investment's annual growth rate over a period of time.\n       </Card.Text>\n       <Button variant=\"primary\" size=\"sm\">Detail</Button>\n     </Card.Body>\n   </Card></Col>\n   </Row>\n        </Container>\n        </>\n\n  ) ;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}